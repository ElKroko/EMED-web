---
export interface ProgramRow {
  program: string;
  modality: string;
  async: boolean;
  sync: boolean;
  pres: boolean;
}

export interface Props {
  rows?: ProgramRow[];
  title?: string;
  className?: string;
}

const { 
  rows = [
    {
      program: "Mediación Familiar",
      modality: "Híbrida",
      async: true,
      sync: true,
      pres: true
    },
    {
      program: "Mediación Escolar",
      modality: "Presencial + Online",
      async: false,
      sync: true,
      pres: true
    },
    {
      program: "Mediación Laboral",
      modality: "Online",
      async: true,
      sync: true,
      pres: false
    },
    {
      program: "Mediación Comunitaria",
      modality: "Presencial",
      async: false,
      sync: false,
      pres: true
    },
    {
      program: "Diplomado en Mediación",
      modality: "Híbrida",
      async: true,
      sync: true,
      pres: true
    }
  ],
  title = "Modalidades por Programa",
  className = ""
} = Astro.props;
---

<section class={`program-matrix py-16 bg-white ${className}`}>
  <div class="container mx-auto px-4">
    
    {title && (
      <div class="text-center mb-12">
        <h2 class="text-3xl md:text-4xl font-bold text-gray-800 mb-4">
          {title}
        </h2>
        <p class="text-lg text-gray-600 max-w-2xl mx-auto">
          Consulta qué modalidades están disponibles para cada programa de formación
        </p>
      </div>
    )}

    <!-- Tabla Desktop -->
    <div class="hidden md:block overflow-hidden rounded-2xl shadow-lg bg-white border border-gray-200">
      <table class="w-full">
        <thead class="bg-gray-50">
          <tr>
            <th class="px-6 py-4 text-left text-sm font-semibold text-gray-800 uppercase tracking-wider">
              Programa
            </th>
            <th class="px-6 py-4 text-left text-sm font-semibold text-gray-800 uppercase tracking-wider">
              Modalidad
            </th>
            <th class="px-6 py-4 text-center text-sm font-semibold text-gray-800 uppercase tracking-wider">
              Asincrónico
            </th>
            <th class="px-6 py-4 text-center text-sm font-semibold text-gray-800 uppercase tracking-wider">
              Sincrónico
            </th>
            <th class="px-6 py-4 text-center text-sm font-semibold text-gray-800 uppercase tracking-wider">
              Presencial
            </th>
          </tr>
        </thead>
        <tbody class="divide-y divide-gray-200">
          {rows.map((row, index) => (
            <tr class={`hover:bg-gray-50 transition-colors duration-200 ${index % 2 === 0 ? 'bg-white' : 'bg-gray-25'}`}>
              <td class="px-6 py-4">
                <div class="text-lg font-semibold text-gray-800">{row.program}</div>
              </td>
              <td class="px-6 py-4">
                <span class="inline-flex items-center px-3 py-1 rounded-full text-sm font-medium bg-turquesa bg-opacity-10 text-turquesa">
                  {row.modality}
                </span>
              </td>
              <td class="px-6 py-4 text-center">
                <div class={`w-4 h-4 rounded-full mx-auto ${row.async ? 'bg-turquesa' : 'border-2 border-gray-300'}`}>
                  {row.async && (
                    <svg class="w-full h-full text-white" fill="currentColor" viewBox="0 0 24 24">
                      <path d="M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z"/>
                    </svg>
                  )}
                </div>
              </td>
              <td class="px-6 py-4 text-center">
                <div class={`w-4 h-4 rounded-full mx-auto ${row.sync ? 'bg-turquesa' : 'border-2 border-gray-300'}`}>
                  {row.sync && (
                    <svg class="w-full h-full text-white" fill="currentColor" viewBox="0 0 24 24">
                      <path d="M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z"/>
                    </svg>
                  )}
                </div>
              </td>
              <td class="px-6 py-4 text-center">
                <div class={`w-4 h-4 rounded-full mx-auto ${row.pres ? 'bg-turquesa' : 'border-2 border-gray-300'}`}>
                  {row.pres && (
                    <svg class="w-full h-full text-white" fill="currentColor" viewBox="0 0 24 24">
                      <path d="M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z"/>
                    </svg>
                  )}
                </div>
              </td>
            </tr>
          ))}
        </tbody>
      </table>
    </div>

    <!-- Cards Mobile -->
    <div class="md:hidden space-y-4">
      {rows.map((row) => (
        <div class="bg-white rounded-lg shadow-md border border-gray-200 p-6">
          <div class="mb-4">
            <h3 class="text-lg font-semibold text-gray-800 mb-2">{row.program}</h3>
            <span class="inline-flex items-center px-3 py-1 rounded-full text-sm font-medium bg-turquesa bg-opacity-10 text-turquesa">
              {row.modality}
            </span>
          </div>
          
          <div class="grid grid-cols-3 gap-4 text-center">
            <div>
              <div class="text-sm font-medium text-gray-600 mb-2">Asincrónico</div>
              <div class="text-2xl">
                {row.async ? '✅' : '⭕'}
              </div>
            </div>
            <div>
              <div class="text-sm font-medium text-gray-600 mb-2">Sincrónico</div>
              <div class="text-2xl">
                {row.sync ? '✅' : '⭕'}
              </div>
            </div>
            <div>
              <div class="text-sm font-medium text-gray-600 mb-2">Presencial</div>
              <div class="text-2xl">
                {row.pres ? '✅' : '⭕'}
              </div>
            </div>
          </div>
        </div>
      ))}
    </div>

    <!-- Leyenda -->
    <div class="mt-8 flex flex-wrap justify-center gap-6 text-sm text-gray-600">
      <div class="flex items-center">
        <div class="w-4 h-4 bg-turquesa rounded-full mr-2"></div>
        <span>Disponible</span>
      </div>
      <div class="flex items-center">
        <div class="w-4 h-4 border-2 border-gray-300 rounded-full mr-2"></div>
        <span>No disponible</span>
      </div>
    </div>

  </div>
</section>

<style>
  .program-matrix {
    background-color: var(--color-white);
  }
  
  .program-matrix table {
    border-radius: var(--table-radius);
    overflow: hidden;
    box-shadow: var(--shadow-lg);
  }
  
  .program-matrix td,
  .program-matrix th {
    border-bottom: 1px solid var(--color-gray-200);
  }
  
  .program-matrix tbody tr:hover {
    background-color: var(--color-gray-50);
  }
  
  /* Circle indicators */
  .program-matrix .w-4.h-4 {
    width: var(--circle-size);
    height: var(--circle-size);
    transition: all var(--transition-fast);
  }
  
  .program-matrix .bg-turquesa {
    background-color: var(--color-turquesa);
  }
  
  .program-matrix .border-gray-300 {
    border-color: var(--color-gray-300);
  }
  
  /* Mobile cards */
  @media (max-width: 768px) {
    .program-matrix .space-y-4 > div {
      box-shadow: var(--shadow-md);
      border-radius: var(--radius-lg);
    }
  }
  
  /* Accessibility */
  .program-matrix tbody tr:focus-within {
    outline: 2px solid var(--color-turquesa);
    outline-offset: -2px;
  }
</style>