---
import { getEmedProducts } from '../../lib/wp';

export interface Props {
  heading?: string;
  subheading?: string;
  className?: string;
  maxItems?: number;
}

const { 
  heading = "Nuestros Programas",
  subheading = "Especialízate en diferentes áreas de la mediación con nuestros programas certificados",
  className = "",
  maxItems = 6
} = Astro.props;

// Función para limpiar HTML de las descripciones
const limpiarHTML = (htmlString) => {
  if (!htmlString) return '';
  return htmlString
    .replace(/<[^>]*>/g, '') // Eliminar todas las etiquetas HTML
    .replace(/&nbsp;/g, ' ') // Reemplazar &nbsp; con espacios
    .replace(/&amp;/g, '&') // Reemplazar &amp; con &
    .replace(/&lt;/g, '<') // Reemplazar &lt; con <
    .replace(/&gt;/g, '>') // Reemplazar &gt; con >
    .trim();
};

// Función para formatear precios
const formatearPrecio = (precio) => {
  if (!precio || precio === '0' || precio === 0) return null;
  let numero = typeof precio === 'string' ? parseFloat(precio.replace(/[^\d.-]/g, '')) : precio;
  if (isNaN(numero)) return null;
  
  // Si el número es menor a 1000, probablemente está en miles (ej: 550 = $550.000)
  if (numero < 1000 && numero > 0) {
    numero = numero * 1000;
  }
  
  return `$${numero.toLocaleString('es-CL')}`;
};

// Obtener todos los productos (diplomados y cursos) de WooCommerce
let productos = [];
try {
  const todosLosProductos = await getEmedProducts({ per_page: 50, orderby: 'menu_order', order: 'asc' });
  productos = todosLosProductos.filter(producto => producto.tipo === 'Diplomado' || producto.tipo === 'Curso');
} catch (error) {
  console.error('Error al cargar productos para el home:', error);
}

// Mapear productos a formato del componente
const programas = productos.slice(0, maxItems).map(producto => {
  // Procesar precios correctamente
  const precioRegular = formatearPrecio(producto.regular_price || producto.price);
  const precioOferta = formatearPrecio(producto.sale_price);
  const precio = precioOferta || precioRegular;
  
  // Determinar si es destacado (mediación familiar o si es featured)
  const esDestacado = producto.slug.includes('mediacion-familiar') || producto.featured || producto.destacado;
  
  // Determinar URL según el tipo
  const urlBase = producto.tipo === 'Diplomado' ? '/diplomados' : '/cursos';
  const url = `${urlBase}/${producto.slug}`;
  
  return {
    title: producto.name,
    description: limpiarHTML(producto.short_description) || 'Programa especializado en técnicas de mediación.',
    duration: producto.duracion || 'Por definir',
    modality: producto.modalidad || 'Por definir',
    tipo: producto.tipo,
    price: precio,
    highlight: esDestacado,
    url: url
  };
});
---

<section class={`programs-grid py-20 bg-crema ${className}`}>
  <div class="container mx-auto px-4 relative z-10">
    
    <!-- Título de la sección -->
    <div class="text-center mb-16 relative z-20">
      <h2 class="text-4xl md:text-5xl lg:text-6xl font-bold text-black mb-6 text-center">
        {heading}
      </h2>
      <p class="text-xl md:text-2xl text-gray-700 max-w-3xl mx-auto leading-relaxed text-center">
        {subheading}
      </p>
    </div>

    <!-- Grid de programas -->
    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8 mb-16 relative z-20">
      {programas.map((programa) => (
        <div class={`program-card bg-white rounded-xl p-8 shadow-lg hover:shadow-xl transition-all duration-300 transform hover:-translate-y-2 ${programa.highlight ? 'ring-2 ring-celeste ring-opacity-50' : ''}`}>
          
          <div class="flex items-center justify-between mb-4">
            <span class={`inline-block px-3 py-1 rounded-full text-sm font-semibold ${
              programa.tipo === 'Diplomado' ? 'bg-naranja text-white' : 'bg-turquesa text-white'
            }`}>
              {programa.tipo}
            </span>
            
            {programa.highlight && (
              <span class="inline-block bg-celeste text-white px-3 py-1 rounded-full text-sm font-semibold">
                ⭐ Más Popular
              </span>
            )}
          </div>
          
          <h3 class="text-2xl font-bold text-gray-800 mb-4">
            {programa.title}
          </h3>
          
          <p class="text-gray-600 leading-relaxed mb-6 line-clamp-3">
            {programa.description}
          </p>
          
          <div class="space-y-3 mb-6">
            <div class="flex items-center text-sm text-gray-600">
              <svg class="w-4 h-4 mr-2 text-turquesa" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"></path>
              </svg>
              <span class="font-medium text-gray-800">Duración: </span>{programa.duration}
            </div>
            
            <div class="flex items-center text-sm text-gray-600">
              <svg class="w-4 h-4 mr-2 text-turquesa" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9.75 17L9 20l-1 1h8l-1-1-.75-3M3 13h18M5 17h14a2 2 0 002-2V5a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z"></path>
              </svg>
              <span class="font-medium text-gray-800">Modalidad: </span>{programa.modality}
            </div>
            
            {programa.price && (
              <div class="flex items-center text-sm text-gray-600">
                <svg class="w-4 h-4 mr-2 text-naranja" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1"></path>
                </svg>
                <span class="font-medium text-gray-800">Inversión: </span>
                <span class="font-bold text-celeste">{programa.price}</span>
              </div>
            )}
          </div>
          
          <a 
            href={programa.url}
            class={`inline-flex items-center justify-center w-full px-6 py-3 font-semibold rounded-lg transition-all duration-300 transform hover:-translate-y-1 hover:shadow-lg program-link ${programa.highlight ? 'bg-naranja hover:bg-amarillo' : 'bg-celeste hover:bg-turquesa'}`}
          >
            Ver Detalles
            <svg class="ml-2 w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
            </svg>
          </a>
        </div>
      ))}
    </div>

    <!-- CTA principal -->
    <div class="text-center relative z-20">
      <div class="space-x-4">
        <a 
          href="/diplomados" 
          class="inline-flex items-center px-8 py-4 bg-naranja font-semibold text-lg rounded-lg hover:bg-amarillo hover:shadow-xl transition-all duration-300 transform hover:-translate-y-1 main-cta-button"
        >
          Ver Todos los Diplomados
          <svg class="ml-2 w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
          </svg>
        </a>
        <a 
          href="/cursos" 
          class="inline-flex items-center px-8 py-4 border-2 border-gray-800 text-gray-800 font-semibold text-lg rounded-lg hover:bg-gray-800 hover:text-white hover:shadow-xl transition-all duration-300 transform hover:-translate-y-1"
        >
          Explorar Cursos
          <svg class="ml-2 w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
          </svg>
        </a>
      </div>
    </div>

  </div>
</section>

<style>
  .program-card {
    position: relative;
    display: flex;
    flex-direction: column;
    height: 100%;
    min-height: 400px;
  }
  
  .program-link {
    color: white !important;
    margin-top: auto;
  }
  
  .program-link:hover {
    color: white !important;
  }
  
  .main-cta-button {
    color: white !important;
  }
  
  .main-cta-button:hover {
    color: white !important;
  }
  
  /* Limitar líneas de descripción */
  .line-clamp-3 {
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
  
  /* Responsive adjustments */
  @media (max-width: 768px) {
    .space-x-4 > * + * {
      margin-left: 0;
      margin-top: 1rem;
    }
    .space-x-4 {
      display: flex;
      flex-direction: column;
      align-items: center;
      gap: 1rem;
    }
  }
</style>